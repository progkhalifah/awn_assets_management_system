# Generated by Django 5.1.4 on 2025-04-03 19:36

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TblAssetsManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_asset', models.CharField(max_length=250, verbose_name='Name Asset')),
                ('description_asset', models.TextField()),
                ('serial_asset', models.IntegerField(verbose_name='Serial Asset')),
                ('asset_number', models.IntegerField(verbose_name='Asset Number')),
                ('image_property', models.ImageField(upload_to='images/assets_awn', verbose_name='Image Property')),
                ('ram_size', models.CharField(blank=True, choices=[('4', '4'), ('8', '8'), ('16', '16'), ('32', '32')], max_length=10, null=True, verbose_name='RAM Size')),
                ('hard_disk_type', models.CharField(blank=True, choices=[('HDD', 'HDD'), ('SSD', 'SSD')], max_length=10, null=True, verbose_name='Hard Disk Type')),
                ('capacity_hard_disk', models.CharField(blank=True, choices=[('250GB', '250GB'), ('500GB', '500GB'), ('1TB', '1TB')], max_length=10, null=True, verbose_name='Capacity Hard Disk Type')),
                ('use_it_by', models.CharField(max_length=250, verbose_name='Use it by')),
                ('status_asset', models.CharField(max_length=250, verbose_name='Status Asset')),
                ('did_i_check_it', models.BooleanField(default=False, verbose_name='Did I check it')),
                ('date_take', models.DateField(verbose_name='Date Take')),
                ('returned_take', models.DateField(verbose_name='Date Returned')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Asset Management',
                'verbose_name_plural': 'Assets Management',
            },
        ),
        migrations.CreateModel(
            name='TblCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_category', models.CharField(max_length=250, verbose_name='Name Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TblCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_company', models.CharField(max_length=250, verbose_name='Name Company')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='TblDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_department', models.CharField(max_length=250, verbose_name='Name Department')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='TblAssetsImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_assets', models.FileField(upload_to='images/assets_awn', verbose_name='Images Assets')),
                ('assets_title_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images_assets', to='api.tblassetsmanagement')),
            ],
            options={
                'verbose_name': 'Asset Image',
                'verbose_name_plural': 'Asset Images',
            },
        ),
        migrations.AddField(
            model_name='tblassetsmanagement',
            name='name_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tblcategories', verbose_name='Name Category'),
        ),
        migrations.CreateModel(
            name='TblCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.IntegerField(verbose_name='Phone Number')),
                ('signature_file', models.FileField(null=True, upload_to='signatures/', validators=[api.models.validate_pdf])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('assets', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_assets_management', to='api.tblassetsmanagement')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_company', to='api.tblcompany')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_department', to='api.tbldepartment')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
